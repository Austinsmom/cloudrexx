<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxCore_ModulesMultiSiteModelEntityCronMailLogProxy extends \Cx\Core_Modules\MultiSite\Model\Entity\CronMailLog implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function getContactId()
    {
        $this->_load();
        return parent::getContactId();
    }

    public function setContactId($contactId)
    {
        $this->_load();
        return parent::setContactId($contactId);
    }

    public function getWebsiteId()
    {
        $this->_load();
        return parent::getWebsiteId();
    }

    public function setWebsiteId($websiteId)
    {
        $this->_load();
        return parent::setWebsiteId($websiteId);
    }

    public function getSuccess()
    {
        $this->_load();
        return parent::getSuccess();
    }

    public function setSuccess($success)
    {
        $this->_load();
        return parent::setSuccess($success);
    }

    public function getSentDate()
    {
        $this->_load();
        return parent::getSentDate();
    }

    public function setSentDate($sentDate)
    {
        $this->_load();
        return parent::setSentDate($sentDate);
    }

    public function setCronMail(\Cx\Core_Modules\MultiSite\Model\Entity\CronMail $cronMail)
    {
        $this->_load();
        return parent::setCronMail($cronMail);
    }

    public function getCronMail()
    {
        $this->_load();
        return parent::getCronMail();
    }

    public function setToken($token)
    {
        $this->_load();
        return parent::setToken($token);
    }

    public function getToken()
    {
        $this->_load();
        return parent::getToken();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'contactId', 'websiteId', 'success', 'sentDate', 'token', 'cronMail');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}
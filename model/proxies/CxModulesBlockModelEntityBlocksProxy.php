<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxModulesBlockModelEntityBlocksProxy extends \Cx\Modules\Block\Model\Entity\Blocks implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setCat($cat)
    {
        $this->_load();
        return parent::setCat($cat);
    }

    public function getCat()
    {
        $this->_load();
        return parent::getCat();
    }

    public function setStart($start)
    {
        $this->_load();
        return parent::setStart($start);
    }

    public function getStart()
    {
        $this->_load();
        return parent::getStart();
    }

    public function setEnd($end)
    {
        $this->_load();
        return parent::setEnd($end);
    }

    public function getEnd()
    {
        $this->_load();
        return parent::getEnd();
    }

    public function setName($name)
    {
        $this->_load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->_load();
        return parent::getName();
    }

    public function setRandom($random)
    {
        $this->_load();
        return parent::setRandom($random);
    }

    public function getRandom()
    {
        $this->_load();
        return parent::getRandom();
    }

    public function setRandom2($random2)
    {
        $this->_load();
        return parent::setRandom2($random2);
    }

    public function getRandom2()
    {
        $this->_load();
        return parent::getRandom2();
    }

    public function setRandom3($random3)
    {
        $this->_load();
        return parent::setRandom3($random3);
    }

    public function getRandom3()
    {
        $this->_load();
        return parent::getRandom3();
    }

    public function setRandom4($random4)
    {
        $this->_load();
        return parent::setRandom4($random4);
    }

    public function getRandom4()
    {
        $this->_load();
        return parent::getRandom4();
    }

    public function setGlobal($global)
    {
        $this->_load();
        return parent::setGlobal($global);
    }

    public function getGlobal()
    {
        $this->_load();
        return parent::getGlobal();
    }

    public function setCategory($category)
    {
        $this->_load();
        return parent::setCategory($category);
    }

    public function getCategory()
    {
        $this->_load();
        return parent::getCategory();
    }

    public function setDirect($direct)
    {
        $this->_load();
        return parent::setDirect($direct);
    }

    public function getDirect()
    {
        $this->_load();
        return parent::getDirect();
    }

    public function setActive($active)
    {
        $this->_load();
        return parent::setActive($active);
    }

    public function getActive()
    {
        $this->_load();
        return parent::getActive();
    }

    public function setOrder($order)
    {
        $this->_load();
        return parent::setOrder($order);
    }

    public function getOrder()
    {
        $this->_load();
        return parent::getOrder();
    }

    public function setWysiwygEditor($wysiwygEditor)
    {
        $this->_load();
        return parent::setWysiwygEditor($wysiwygEditor);
    }

    public function getWysiwygEditor()
    {
        $this->_load();
        return parent::getWysiwygEditor();
    }

    public function addRelLangContents(\Cx\Modules\Block\Model\Entity\RelLangContent $relLangContents)
    {
        $this->_load();
        return parent::addRelLangContents($relLangContents);
    }

    public function getRelLangContents()
    {
        $this->_load();
        return parent::getRelLangContents();
    }

    public function addRelPages(\Cx\Modules\Block\Model\Entity\RelPages $relPages)
    {
        $this->_load();
        return parent::addRelPages($relPages);
    }

    public function getRelPages()
    {
        $this->_load();
        return parent::getRelPages();
    }

    public function addTargetingOptions(\Cx\Modules\Block\Model\Entity\TargetingOption $targetingOptions)
    {
        $this->_load();
        return parent::addTargetingOptions($targetingOptions);
    }

    public function getTargetingOptions()
    {
        $this->_load();
        return parent::getTargetingOptions();
    }

    public function setCategories(\Cx\Modules\Block\Model\Entity\Categories $categories)
    {
        $this->_load();
        return parent::setCategories($categories);
    }

    public function getCategories()
    {
        $this->_load();
        return parent::getCategories();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __call($methodName, $arguments)
    {
        $this->_load();
        return parent::__call($methodName, $arguments);
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'cat', 'start', 'end', 'name', 'random', 'random2', 'random3', 'random4', 'global', 'category', 'direct', 'active', 'order', 'wysiwygEditor', 'relLangContents', 'relPages', 'targetingOptions', 'categories');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}